name: CI/CD for Spring Boot with Docker

on:
  push:
    branches:
      - master
      - develop  # Added 'develop' branch to trigger pipeline
  pull_request:
    branches:
      - master
      - develop  # Added 'develop' branch to trigger pipeline

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout source code
      - name: Checkout source code
        uses: actions/checkout@v3

      # Debug step: Print the current branch to ensure the workflow is triggered
      - name:
          Debug: Print current branch
        run: |
          echo "Current branch: $GITHUB_REF"

      # Step 2: Set up JDK 17 for the build
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      # Step 3: Cache Maven packages to speed up builds
      - name: Cache Maven packages
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven

      # Step 4: Build the application with Maven
      - name: Build with Maven
        run: mvn clean package

      # Step 5: Set up Docker Buildx for multi-platform builds
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # Step 6: Install Docker Compose
      - name: Install Docker Compose
        run: |
          sudo apt-get update
          sudo apt-get install -y docker-compose

      # Step 7: Build and run services with Docker Compose
      - name: Build and run services with Docker Compose
        run: docker-compose up --build -d
        env:
          SPRING_DATA_MONGODB_URI: ${{ secrets.SPRING_DATA_MONGODB_URI }}

      # Step 8: Shut down Docker Compose services
      - name: Shutdown Docker Compose
        run: docker-compose down

      # Step 9: Log in to Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Step 10: Build Docker image (only for 'master' branch)
      # This step will be skipped for 'develop' branch
      - name: Build Docker image
        run: docker build -t ${{ secrets.DOCKER_USERNAME }}/raccoon-backend:latest .
        if: github.ref != 'refs/heads/develop'  # Skip this step for 'develop' branch

      # Step 11: Push Docker image to Docker Hub (only for 'master' branch)
      # This step will be skipped for 'develop' branch
      - name: Push Docker image to Docker Hub
        run: docker push ${{ secrets.DOCKER_USERNAME }}/raccoon-backend:latest
        if: github.ref != 'refs/heads/develop'  # Skip this step for 'develop' branch
